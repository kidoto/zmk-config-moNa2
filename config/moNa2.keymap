#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // Â¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }


&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R     &kp T                                                         &kp Y             &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &lt 1 F   &kp G        &trans                    &lt 1 TAB              &kp H             &kp J  &kp K      &lt 6 L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V     &kp B        &trans                    &lt 2 INTERNATIONAL_4  &kp N             &kp M  &kp COMMA  &kp DOT  &kp RIGHT_SHIFT
&kp LEFT_SHIFT    &kp LEFT_WIN  &kp LEFT_ALT  &mkp MB1  &lt 2 SPACE  &mt LCTRL INT_MUHENKAN    &lt 1 TAB              &lt 2 INT_HENKAN                    &kp DEL  &kp RCTRL
            >;
        };

        layer_1 {
            bindings = <
&kp JP_EQUAL  &kp JP_DQUOTE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9                                    &kp JP_LPAREN     &kp JP_RPAREN  &kp JP_LBRACE  &kp JP_RBRACE      &kp MINUS
&kp JP_AT    &kp EXCLAMATION    &kp KP_N4        &kp KP_N5        &kp KP_N6        &trans    &trans            &kp LG(LEFT_ARROW)       &kp PAGE_DOWN          &kp PAGE_UP     &kp LG(RIGHT_ARROW)  &kp SEMICOLON
&kp PLUS       &kp KP_N0          &kp KP_N1        &kp KP_N2        &kp KP_NUMBER_3  &trans    &kp JP_QUOTE  &kp JP_QUOTE         &kp QUESTION           &kp SLASH       &kp BACKSLASH        &kp JP_ASTERISK
&kp BACKSLASH  &kp CARET          &kp HASH         &kp SLASH        &trans           &trans    &kp LG(UP_ARROW)  &kp LG(LS(RIGHT_ARROW))                                         &trans               &kp DOLLAR
            >;
        };

        layer_2 {
            bindings = <
&kp ESCAPE  &kp KP_NUMBER_7  &kp ENTER    &kp F5       &kp PLUS                                 &kp F2            &kp F10            &kp BACKSPACE   &kp DELETE       &kp JP_UNDERSCORE
&kp LC(A)   &kp LC(S)        &kp PERCENT  &kp PERCENT  &kp JP_AMPERSAND   &trans       &trans  &kp LEFT          &kp DOWN_ARROW     &kp UP_ARROW    &kp RIGHT        &kp JP_COLON
&kp LC(Z)   &kp LC(X)        &kp LC(C)    &kp LC(V)    &kp LC(LEFT_ARROW)  &kp EQUAL    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans      &trans           &trans       &trans       &trans              &sl 4        &trans  &trans                                               &trans           &kp PIPE
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                    &trans        &bt BT_CLR_ALL
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans  &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                      &trans  &trans
            >;
        };
    };
};
